<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LanceBlog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-08-23T08:58:56.797Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Lance</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>asynq:一个由 Go 开发的轻量级的异步定时任务系统</title>
    <link href="http://example.com/2022/08/23/asynq:%E4%B8%80%E4%B8%AA%E7%94%B1%20Go%20%E5%BC%80%E5%8F%91%E7%9A%84%E8%BD%BB%E9%87%8F%E7%BA%A7%E7%9A%84%E5%BC%82%E6%AD%A5%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E7%B3%BB%E7%BB%9F/"/>
    <id>http://example.com/2022/08/23/asynq:%E4%B8%80%E4%B8%AA%E7%94%B1%20Go%20%E5%BC%80%E5%8F%91%E7%9A%84%E8%BD%BB%E9%87%8F%E7%BA%A7%E7%9A%84%E5%BC%82%E6%AD%A5%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E7%B3%BB%E7%BB%9F/</id>
    <published>2022-08-23T08:15:31.000Z</published>
    <updated>2022-08-23T08:58:56.797Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1 安装"></a>1 安装</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">go get -u github.com/hibiken/asynq</span><br><span class="line">go get -u github.com/hibiken/asynq/tools/asynqmon</span><br></pre></td></tr></table></figure><h3 id="2-使用"><a href="#2-使用" class="headerlink" title="2.使用"></a>2.使用</h3><p>producer.go将创建并定时要由consumer异步处理的任务。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建asynq连接redis </span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">AsynqServer</span><span class="params">()</span></span> &#123;</span><br><span class="line">global.AsynqRedis = asynq.NewServer(asynq.RedisClientOpt&#123;</span><br><span class="line">Addr:     youraddr,</span><br><span class="line">Password: yourpassward, <span class="comment">// no password set</span></span><br><span class="line">DB:       yourdb,       <span class="comment">// use default DB</span></span><br><span class="line">&#125;, asynq.Config&#123;</span><br><span class="line">Concurrency: <span class="number">50</span>,    <span class="comment">// 并发树</span></span><br><span class="line">Queues: <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>&#123;</span><br><span class="line"><span class="string">&quot;task_queue&quot;</span>: <span class="number">1</span>,     <span class="comment">// 队列分配处理时间，此处我只用了一个</span></span><br><span class="line">&#125;,</span><br><span class="line">RetryDelayFunc: <span class="function"><span class="keyword">func</span><span class="params">(n <span class="keyword">int</span>, e error, t *asynq.Task)</span> <span class="title">time</span>.<span class="title">Duration</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">5</span> * time.Second <span class="comment">// 间隔5秒重试</span></span><br><span class="line">&#125;&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">AsyncConsumer</span><span class="params">()</span></span> &#123;</span><br><span class="line">mux := asynq.NewServeMux()</span><br><span class="line">mux.HandleFunc(<span class="string">&quot;task_queue&quot;</span>, HandleFraud) <span class="comment">//  HandleFraud 处理任务队列函数</span></span><br><span class="line"><span class="keyword">if</span> err := global.AsynqRedis.Run(mux); err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;启动正常规则流任务失败&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">&quot;启动正常规则流任务成功&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>consumer.go 将处理producer创建的任务。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//// 即时消费</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Test_Enqueue</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">payload, _ := json.Marshal(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;<span class="string">&quot;uniq_id&quot;</span>: <span class="string">&quot;123456&quot;</span>, <span class="string">&quot;policy_name&quot;</span>: <span class="string">&quot;xw&quot;</span>&#125;)</span><br><span class="line">task := asynq.NewTask(<span class="string">&quot;risk:xw:task_queue&quot;</span>, payload, asynq.Retention(<span class="number">3</span>*time.Hour), asynq.MaxRetry(<span class="number">20</span>), asynq.TaskID(<span class="string">&quot;1111&quot;</span>))</span><br><span class="line">    <span class="comment">// type: risk:xw:task_queue    asynq.Retention(3*time.Hour) 结果留存3个小时  asynq.MaxRetry(20) 重试次数20  asynq.TaskID(&quot;1111&quot;) 自定义任务ID</span></span><br><span class="line">res, err := c.Enqueue(task, asynq.Queue(<span class="string">&quot;risk:xw:task_queue&quot;</span>))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">t.Errorf(<span class="string">&quot;could not enqueue task: %v&quot;</span>, err)</span><br><span class="line">t.FailNow()</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">&quot;Enqueued Result: %+v\n&quot;</span>, res)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-asynqmon-监控"><a href="#3-asynqmon-监控" class="headerlink" title="3.asynqmon 监控"></a>3.asynqmon 监控</h3><h4 id="3-1安装在github-https-github-com-hibiken-asynqmon"><a href="#3-1安装在github-https-github-com-hibiken-asynqmon" class="headerlink" title="3.1安装在github https://github.com/hibiken/asynqmon"></a>3.1安装在github <a href="https://github.com/hibiken/asynqmon">https://github.com/hibiken/asynqmon</a></h4><h4 id="3-2-使用"><a href="#3-2-使用" class="headerlink" title="3.2 使用"></a>3.2 使用</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">asynqmon stats</span><br></pre></td></tr></table></figure><p>你应该能看到，有一个任务Enqueued状态，另一个在Scheduled状态。</p><p>注意：如需了解每种状态的含义，请参阅Wiki页面上<a href="https://github.com/hibiken/asynq/wiki/Life-of-a-Task">Life of Task</a>。</p><p>让我们运行asynqmon与watch命令，以便我们能够连续运行的命令看到的变化。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">watch -n 3 asynqmon stats # Runs `asynqmon stats` every 3 seconds</span><br></pre></td></tr></table></figure><p>详情请参考：Asyqn-<a href="https://github.com/hibiken/asynq">https://github.com/hibiken/asynq</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-安装&quot;&gt;&lt;a href=&quot;#1-安装&quot; class=&quot;headerlink&quot; title=&quot;1 安装&quot;&gt;&lt;/a&gt;1 安装&lt;/h3&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;</summary>
      
    
    
    
    <category term="go" scheme="http://example.com/categories/go/"/>
    
    
    <category term="asynq" scheme="http://example.com/tags/asynq/"/>
    
  </entry>
  
  <entry>
    <title>初级算法</title>
    <link href="http://example.com/2022/03/23/%E5%88%9D%E7%BA%A7%E7%AE%97%E6%B3%95/"/>
    <id>http://example.com/2022/03/23/%E5%88%9D%E7%BA%A7%E7%AE%97%E6%B3%95/</id>
    <published>2022-03-23T03:01:32.000Z</published>
    <updated>2022-08-23T08:58:56.777Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-删除排序数组中的重复项"><a href="#1-删除排序数组中的重复项" class="headerlink" title="1.删除排序数组中的重复项"></a>1.删除排序数组中的重复项</h3><p>给你一个 升序排列 的数组 nums ，请你 原地 删除重复出现的元素，使每个元素 只出现一次 ，返回删除后数组的新长度。元素的 相对顺序 应该保持 一致 。</p><p>由于在某些语言中不能改变数组的长度，所以必须将结果放在数组nums的第一部分。更规范地说，如果在删除重复项之后有 k 个元素，那么 nums 的前 k 个元素应该保存最终结果。</p><p>将最终结果插入 nums x的前 k 个位置后返回 k 。</p><p>不要使用额外的空间，你必须在 原地 修改输入数组 并在使用 O(1) 额外空间的条件下完成。</p><p>判题标准:</p><p>系统会用下面的代码来测试你的题解:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">int[] nums = [...]; // 输入数组</span><br><span class="line">int[] expectedNums = [...]; // 长度正确的期望答案</span><br><span class="line"></span><br><span class="line">int k = removeDuplicates(nums); // 调用</span><br><span class="line"></span><br><span class="line">assert k == expectedNums.length;</span><br><span class="line">for (int i = 0; i &lt; k; i++) &#123;</span><br><span class="line">    assert nums[i] == expectedNums[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果所有断言都通过，那么您的题解将被 通过。</p><p>示例 1：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,1,2]</span><br><span class="line">输出：2, nums = [1,2,_]</span><br><span class="line">解释：函数应该返回新的长度 2 ，并且原数组 nums 的前两个元素被修改为 1, 2 。不需要考虑数组中超出新长度后面的元素。</span><br></pre></td></tr></table></figure><p>示例 2：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [0,0,1,1,1,2,2,3,3,4]</span><br><span class="line">输出：5, nums = [0,1,2,3,4]</span><br><span class="line">解释：函数应该返回新的长度 5 ， 并且原数组 nums 的前五个元素被修改为 0, 1, 2, 3, 4 。不需要考虑数组中超出新长度后面的元素。</span><br></pre></td></tr></table></figure><p>题解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">removeDuplicates</span>(<span class="params">self, nums</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type nums: List[int]</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(nums)-<span class="number">1</span>,<span class="number">0</span>,-<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> nums[i] == nums[i-<span class="number">1</span>]:</span><br><span class="line">                <span class="keyword">del</span> nums[i]</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(nums)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-删除排序数组中的重复项&quot;&gt;&lt;a href=&quot;#1-删除排序数组中的重复项&quot; class=&quot;headerlink&quot; title=&quot;1.删除排序数组中的重复项&quot;&gt;&lt;/a&gt;1.删除排序数组中的重复项&lt;/h3&gt;&lt;p&gt;给你一个 升序排列 的数组 nums ，请你 原地 </summary>
      
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="初级算法" scheme="http://example.com/tags/%E5%88%9D%E7%BA%A7%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>gunicorn版本问题导致服务异常</title>
    <link href="http://example.com/2020/09/05/gunicorn%E7%89%88%E6%9C%AC%E9%97%AE%E9%A2%98%E5%AF%BC%E8%87%B4%E6%9C%8D%E5%8A%A1%E5%BC%82%E5%B8%B8/"/>
    <id>http://example.com/2020/09/05/gunicorn%E7%89%88%E6%9C%AC%E9%97%AE%E9%A2%98%E5%AF%BC%E8%87%B4%E6%9C%8D%E5%8A%A1%E5%BC%82%E5%B8%B8/</id>
    <published>2020-09-05T02:25:40.000Z</published>
    <updated>2021-12-03T08:57:50.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="gunicorn-19-9版本的代码放到19-7-1中遇到的问题"><a href="#gunicorn-19-9版本的代码放到19-7-1中遇到的问题" class="headerlink" title="gunicorn 19.9版本的代码放到19.7.1中遇到的问题"></a>gunicorn 19.9版本的代码放到19.7.1中遇到的问题</h3><p>gunicorn/app/wsgiapp.py</p><p><img src="gunicorn%E7%89%88%E6%9C%AC%E9%97%AE%E9%A2%98%E5%AF%BC%E8%87%B4%E6%9C%8D%E5%8A%A1%E5%BC%82%E5%B8%B8/image-20211110113059126.png" alt="image-20211110113059126"></p><p>gunicorn/app/base.py</p><p><img src="gunicorn%E7%89%88%E6%9C%AC%E9%97%AE%E9%A2%98%E5%AF%BC%E8%87%B4%E6%9C%8D%E5%8A%A1%E5%BC%82%E5%B8%B8/image-20211110113159747.png" alt="image-20211110113159747"></p><p>项目目录结构如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">-project_name              项目名称</span><br><span class="line"> -script                          脚本目录</span><br><span class="line">  -gunicorn_config.py             gunicorn 配置文件</span><br><span class="line">  -start.sh                       启动脚本</span><br><span class="line"> -src                             源代码</span><br><span class="line">  -xxxxxxxx</span><br><span class="line">  -app.py      app文件</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="meta">#</span><span class="bash"> gunicorn 配置文件</span></span><br><span class="line">....</span><br><span class="line">script_path = os.path.dirname(os.path.abspath(__file__))</span><br><span class="line">work_path = os.path.dirname(script_path)</span><br><span class="line">pidfile = &#x27;&#123;&#125;/gunicorn.pid&#x27;.format(script_path)</span><br><span class="line">errorlog = &#x27;&#123;&#125;/log/gunicorn_error.log&#x27;.format(work_path)</span><br><span class="line">chdir = &#x27;&#123;&#125;/src&#x27;.format(work_path)</span><br><span class="line">....</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> start.sh</span></span><br><span class="line">CONFIG_PATH=$BASE_DIR/script/gunicorn_config.py</span><br><span class="line">CMD=&quot;gunicorn --daemon -c $CONFIG_PATH app:myapp&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 结合到gunicorn文件改动，当前这个配置在19.7.1版本上是先进行的根目录设置，然后去进行导包，那么就会出现在src目录中导包出现（from src.xxxx import xxx）无法找到src,此时默认会找src下的src,从而导致服务无法运行，那么修改方式如下</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> gunicorn 配置文件</span></span><br><span class="line">....</span><br><span class="line">script_path = os.path.dirname(os.path.abspath(__file__))</span><br><span class="line">work_path = os.path.dirname(script_path)</span><br><span class="line">pidfile = &#x27;&#123;&#125;/gunicorn.pid&#x27;.format(script_path)</span><br><span class="line">errorlog = &#x27;&#123;&#125;/log/gunicorn_error.log&#x27;.format(work_path)</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="built_in">chdir</span> = <span class="string">&#x27;&#123;&#125;/src&#x27;</span>.format(work_path)</span></span><br><span class="line">....</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> start.sh</span></span><br><span class="line">CONFIG_PATH=$BASE_DIR/script/gunicorn_config.py</span><br><span class="line">CMD=&quot;gunicorn --daemon -c $CONFIG_PATH src.app:myapp&quot;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">rule_ocr_data</span><br><span class="line">rule_extend_loan</span><br><span class="line">rule_recommend</span><br><span class="line">rule_relation_network_data</span><br><span class="line">rule_relation_address_variable_data</span><br><span class="line">rule_txl_data</span><br><span class="line">rule_app_data</span><br><span class="line">rule_package_price_data</span><br><span class="line">decision_xjd_zd</span><br><span class="line">5 rule_a_zd /  4 通过 rule_annual_pay_data</span><br><span class="line">rule_c_zd/ </span><br><span class="line">rule_t_zd</span><br><span class="line">rule_access_zd</span><br><span class="line">rule_relation_network_zd</span><br><span class="line">rule_xd_zd</span><br><span class="line">rule_tx_zd</span><br><span class="line">rule_zx_zd</span><br><span class="line">rule_ed_zd</span><br><span class="line">rule_baihang_credit_zd</span><br><span class="line">rule_br_zd</span><br><span class="line">rule_hujin_zd</span><br><span class="line">rule_xinyan_zd</span><br><span class="line">rule_no_credit_score_zd</span><br><span class="line">rule_court_zd</span><br><span class="line">rule_tdrh_zd</span><br><span class="line">rule_xd_money_zd</span><br><span class="line">rule_b_zd</span><br><span class="line">rule_f_zd</span><br><span class="line">rule_faceverify_zd</span><br><span class="line">rule_tuzhi_zd</span><br><span class="line">rule_ylzc</span><br><span class="line">rule_dzx_zd</span><br><span class="line">rule_main_model_zd</span><br><span class="line">rule_score_zd</span><br><span class="line">rule_ph_type_price_zd</span><br><span class="line">rule_zxsj_zd</span><br><span class="line">rule_tcsj_zd</span><br><span class="line">1 rule_annual_pay_data // 2456 rule_amount</span><br><span class="line">  rule_a // rule_classify</span><br><span class="line">  rule_c// rule_automate</span><br><span class="line">  rule_t// rule_rateclass</span><br><span class="line">  rule_access// rule_user_level</span><br><span class="line">  rule_gf// rule_qyed_apr36</span><br><span class="line">  rule_relation_network// rule_attach_info</span><br><span class="line">  rule_xd // </span><br><span class="line">  rule_name //</span><br><span class="line">  rule_zx //</span><br><span class="line">  rule_ed //</span><br><span class="line">  rule_baihang_credit //</span><br><span class="line">  rule_br //</span><br><span class="line">  rule_hujin //</span><br><span class="line">  rule_xinyan //</span><br><span class="line">  rule_no_credit_score //</span><br><span class="line">  rule_court //</span><br><span class="line">  rule_py //</span><br><span class="line">  rule_access_money //</span><br><span class="line">  rule_xd_money //</span><br><span class="line">  rule_tx_money //</span><br><span class="line">  rule_zx_money //</span><br><span class="line">  rule_hujin_operator //</span><br><span class="line">  rule_td //</span><br><span class="line">  rule_tdrh //</span><br><span class="line">  rule_td_money //</span><br><span class="line">  rule_b //</span><br><span class="line">  rule_f //</span><br><span class="line">  rule_faceverify //</span><br><span class="line">  rule_tuzhi //</span><br><span class="line">  rule_zhitongche //</span><br><span class="line">  rule_ylzc //</span><br><span class="line">  rule_dzx //</span><br><span class="line">  rule_main_model //</span><br><span class="line">  rule_score //</span><br><span class="line">  rule_tuzhi_score //</span><br><span class="line">  rule_td_score //</span><br><span class="line">  rule_xd_score //</span><br><span class="line">  rule_hujin_score //</span><br><span class="line">  rule_tx_score //</span><br><span class="line">  rule_zx_score //</span><br><span class="line">  rule_ocr_score //</span><br><span class="line">  rule_ph_type_price //</span><br><span class="line">  rule_zxsj //</span><br><span class="line">  rule_tcsj //</span><br><span class="line">  rule_dhb_model_yidong //</span><br><span class="line">  rule_amount //</span><br><span class="line">  rule_classify //</span><br><span class="line">  rule_user_level //</span><br><span class="line">  rule_qyed_apr36 //</span><br><span class="line">  rule_attach_info //</span><br><span class="line">  </span><br><span class="line">  </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;gunicorn-19-9版本的代码放到19-7-1中遇到的问题&quot;&gt;&lt;a href=&quot;#gunicorn-19-9版本的代码放到19-7-1中遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;gunicorn 19.9版本的代码放到19.7.1中遇</summary>
      
    
    
    
    <category term="web相关" scheme="http://example.com/categories/web%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="gunicorn" scheme="http://example.com/tags/gunicorn/"/>
    
  </entry>
  
</feed>
